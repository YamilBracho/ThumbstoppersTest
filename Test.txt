1. Write a vue (preferred) or react component that lists the following in an unordered list:
    - Cycle through the numbers 3 - 103
    - When the current number is evenly divisible by 3, output "three"
    - When the current number is evenly divisible by 5, output "five"
    -  When the current number is evenly divisible by both 3 and 5, output “three and five”
·      When the current number is not divisible by 3 or 5, don’t show it in the list


Vue.component('myItem', {
  template: 
    '<div v-if="num % 3 == 0">three</div>
    <div v-if="num % 5 == 0">five</div>
    <div v-if="num % 3 == 0 && num % 5 == 0">three and five</div>'
})

ul>
  <li v-for="item in items">
    <myItem {{num=item}}</myItem>
  </li>
</ul>

2) Write a PostresSQL query that takes the data from 2 tables and outputs 
	“user’s name”, 
	“user’s id” and 
	“user’s client name”.  

	The tables are named “users” and “clients”.  
	“users” contains the columns id, name, password, username, client_id as columns.  
	clients contains id, name, address, city, state, zip_code.  
	Each column of the output should be properly labeled as indicated in the initial request.

A)
SELECT
  u.name AS "User's Name",
  u.id AS "User's id",
  c.name AS "Client's Name"  
FROM clients c
INNER JOIN users u ON  u.id = client_id

3) Now, take your output from question 2.  
  Assume that there are multiple users per client.  
  Display the “number of users” and “client name” for each client.

A)
SELECT
  c.name AS "Client Name"  
  (SELECT COUNT(Id) FROM users u WHERE u.clientid = c.id) AS "number of users"
FROM clients c

4. Explain how you would make a copy of our production codebase so that you can begin developing a new feature 
   from a project plan and how you would share your work with the world as production software.  
   Please use exact commands for starting your work, preparing for review, and getting it deployed.
   
   1) Clone project: git clone git@example.com:project-name.git.
   2) Create branch with your feature: git checkout -b $feature_name.
   3) Make ammends and implement new funcionality. Issue unitary tests
   4) Push your branch
   5) Make tests in a like-production environmente
   6) Create a merge request


5.  In Javascript and html5, write a simple web form that has a text field that is labeled “new button text” 
   button that says “Click Me”.  When you click the button, it should change the button’s internal text to say 
   whatever was in the text input above. 
   
		main.html
		
		<!DOCTYPE html>
		<html lang="en">
		<head>
			<meta charset="UTF-8">
			<meta http-equiv="X-UA-Compatible" content="IE=edge">
			<meta name="viewport" content="width=device-width, initial-scale=1.0">
			<title>Document</title>
		</head>
		<body>
			<form action="">
				<label for="MyText">new button text</label>
				<input type="text" name="MyText" id="MyText">
				<br>
				<button type="button" onclick="myFunction()" id="btnMain">Click Me</button> 
			</form>

			<script>
				function myFunction() {
					document.getElementById('btnMain').innerHTML = document.getElementById('MyText').value;
				}
			</script>
		</body>
		</html>

6. Using your form from question 6, Create CSS to change the look of your form utilizing our corporate colors.  
   This stylesheet must include reference to . and #.  Share the new form and style sheet. (https://thumbstopper.com/ )
   
		main.html
		
		<!DOCTYPE html>
		<html lang="en">
		<head>
			<meta charset="UTF-8">
			<meta http-equiv="X-UA-Compatible" content="IE=edge">
			<meta name="viewport" content="width=device-width, initial-scale=1.0">
			<title>Document</title>
			<link rel="stylesheet" type="text/css" href="MyStyle.css">
		</head>
		<body class="bodyClass">
			<form action="">
				<label for="MyText">new button text</label>
				<input type="text" name="MyText" id="MyText" class="text-long">
				<br>
				<button type="button" onclick="myFunction()" id="btnMain" >Click Me</button> 
			</form>

			<script>
				function myFunction() {
					document.getElementById('btnMain').innerHTML = document.getElementById('MyText').value;
				}
			</script>
		</body>
		</html>
		
		MyStyle.css

		.bodyClass {
			background-color: blue;
		}

		.text-long {
			border: 2px solid red;
		}

		#btnMain {
			padding: 15px 32px;
			text-align: center;
			display: inline-block;
			font-size: 16px;
			margin: 4px 2px;
			cursor: pointer;
		}
